version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: restaceratops-backend
    ports:
      - "8000:8000"
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - MONGODB_URI=${MONGODB_URI:-mongodb://localhost:27017}
      - MONGODB_DB_NAME=${MONGODB_DB_NAME:-restaceratops}
      - PORT=8000
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - restaceratops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: restaceratops-frontend
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8000}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - restaceratops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: MongoDB service (if you want to run MongoDB locally)
  mongodb:
    image: mongo:7.0
    container_name: restaceratops-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGODB_DB_NAME:-restaceratops}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - restaceratops-network
    restart: unless-stopped
    profiles:
      - mongodb-local

networks:
  restaceratops-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
